# Generated by Django 2.1.7 on 2019-02-28 15:22

from django.db import migrations, models
import django.db.models.deletion
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=256)),
                ('is_correct', models.BooleanField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('linked_answer', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='linked_answer_reverse', to='quizz.Answer')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('OPEN', 'Open answer'), ('MCQ', 'Multiple choices'), ('LINKED', 'Linked answers')], max_length=6, verbose_name="Question's type")),
                ('difficulty', models.PositiveSmallIntegerField(default=1, verbose_name='Difficulty')),
                ('question', models.CharField(max_length=256, verbose_name='Question')),
                ('illustration', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to='user-generated-content/quizz/illustrations/', verbose_name='Illustration')),
                ('has_open_choice', models.BooleanField(default=False, verbose_name='Has open choice')),
                ('open_valid_answer', models.CharField(blank=True, default=None, max_length=1024, null=True, verbose_name="Question's valid answer if this is an open question or if this is a MCQ and the answer is not in the proposed answers")),
                ('answer_comment', models.TextField(max_length=65536, verbose_name="Answer's comment")),
                ('answers', models.ManyToManyField(related_name='proposed_in_questions', to='quizz.Answer', verbose_name="Question's proposed answers")),
            ],
        ),
        migrations.CreateModel(
            name='QuestionLocale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=8, verbose_name='ISO code')),
                ('name', models.CharField(max_length=255, verbose_name='Display name')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name of the tag')),
                ('slug', models.SlugField(editable=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='quizz.Tag')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='locale',
            field=models.ForeignKey(max_length=8, on_delete=django.db.models.deletion.PROTECT, to='quizz.QuestionLocale', verbose_name='Locale'),
        ),
        migrations.AddField(
            model_name='question',
            name='tags',
            field=models.ManyToManyField(to='quizz.Tag', verbose_name="Question's tags for quizz generation filtering"),
        ),
    ]
